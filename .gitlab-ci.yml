image: "rust:slim"

services:
  - name: postgres:latest
    alias: postgres

variables:
  POSTGRES_DB: my_support
  POSTGRES_USER: sup_user
  POSTGRES_PASSWORD: 12345
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: postgres://sup_user:12345@postgres/my_support
  ROCKET_DATABASES: '{main={url="postgres://sup_user:12345@postgres/my_support",pool_size=1}}'

stages:
  - setup
  - build
  - test

# This waits until the database is available and running, and runs migrations
setup_db:
  stage: setup
  before_script:
    - apt-get update
    - apt-get install libpq-dev pkg-config libssl-dev -y
    - export PGHOST=postgres
    - until (echo > /dev/tcp/$PGHOST/5432) >/dev/null 2>&1; do >&2 echo "service $PGHOST not ready... sleeping"; sleep 5; done
    - echo "connected to... $PGHOST"
  script:
    - cargo install diesel_cli --no-default-features --features "postgres"
    - diesel setup --locked-schema
    - diesel migration run --locked-schema

# Test the Rust format
rust_format_check:
  stage: build
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt --verbose -- --check

# Run clippy
rust_clippy_check:
  stage: build
  before_script:
    - apt-get update
    - apt-get install libpq-dev pkg-config libssl-dev -y
    - rustup component add clippy
  script:
    - cargo clippy --bins --lib --tests --benches --verbose

rust_frontend_build:
  stage: build
  before_script:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - apt-get update
    - apt-get install pkg-config libssl-dev yarn -y
    - rustup target add wasm32-unknown-unknown
    - cargo install trunk wasm-bindgen-cli
  script:
    - cd ./frontend
    - yarn install
    - trunk build

# Build the backend
rust_backend_build:
  stage: build
  before_script:
    - apt-get update
    - apt-get install libpq-dev pkg-config libssl-dev -y
  script:
    - cargo build --verbose

# Check Rust documentation generation
rust_documentation:
  stage: build
  script:
    - cargo doc --verbose

# Run the unit tests
unit_tests:
  stage: test
  variables:
    DIST_FOLDER: frontend/dist
  before_script:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - apt-get update
    - apt-get install libpq-dev pkg-config libssl-dev yarn -y
    - rustup target add wasm32-unknown-unknown
    - cargo install trunk wasm-bindgen-cli
    - cd ./frontend
    - yarn install
    - trunk build
    - cd ../
    - cargo install diesel_cli --no-default-features --features "postgres"
    - diesel setup --locked-schema
    - diesel migration run --locked-schema
    - export PGHOST=postgres
    - until (echo > /dev/tcp/$PGHOST/5432) >/dev/null 2>&1; do >&2 echo "service $PGHOST not ready... sleeping"; sleep 5; done
    - echo "connected to... $PGHOST"
  script:
    - cargo test --verbose
